name: CI/CD Pipeline

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

env:
  PYTHON_VERSION: "3.13"
  NODE_VERSION: "20"

jobs:
  test-microservices:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service: [account, links, monxt, movie, notifications, person, shows]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .test.env file
        run: |
          if [ ! -f .test.env ]; then
            cp sample-env .test.env
            echo "Created .test.env from sample-env"
          fi

      - name: Run microservice tests
        env:
          CICD_MODE: "True"
        run: |
          chmod +x ./run.sh
          ./run.sh docker test up ${{ matrix.service }}

      - name: Cleanup
        if: always()
        run: |
          docker compose -f docker-compose-test.yml down --remove-orphans
          docker system prune -f

  test-theater:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .test.env file
        run: |
          if [ ! -f .test.env ]; then
            cp sample-env .test.env
            echo "Created .test.env from sample-env"
          fi

      - name: Run theater tests
        env:
          CICD_MODE: "True"
        run: |
          chmod +x ./run.sh
          ./run.sh docker test up theater

      - name: Cleanup
        if: always()
        run: |
          docker compose -f docker-compose-test.yml down --remove-orphans
          docker system prune -f

  security-scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

  docker-build:
    runs-on: ubuntu-latest
    needs: [test-microservices, test-theater]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./microservices
          file: ./microservices/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: movie-fav:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
