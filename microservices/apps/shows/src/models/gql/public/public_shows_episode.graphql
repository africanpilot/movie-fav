extend type Query {
    showsEpisode(pageInfo: ShowsEpisodePageInfoInput, filterInput: ShowsEpisodeFilterInput): ShowsEpisodeResponse
}

extend type Mutation {
    showsEpisodeUpdate(shows_episode_id: Int!): ShowsEpisodeResponse
}

type ShowsEpisodeResponse {
    response: GeneralResponse!
    pageInfo: PageInfo
    result: [ShowsEpisode]
}

type ShowsEpisode @key(fields: "id") {
    id: Int
    shows_info_id: Int
    shows_season_id: Int
    shows_imdb_id: String
    imdb_id: String
    title: String
    rating: Float
    votes: Int
    release_date: String
    plot: String
    year: Int
    season: Int
    episode: Int
    download_1080p_url: String
    download_720p_url: String
    download_480p_url: String
    cover: String
    full_cover: String
    run_times: [String]
}


input ShowsEpisodeFilterInput {
    id: [Int]
    title: [String]
    year: [Int]
}

input ShowsEpisodePageInfoInput {
  first: Int
  pageNumber: Int
  minId: Int
  maxId: Int
  orderBy: OrderByEnum
  sortBy: [ShowsEpisodeSortByEnum]
}