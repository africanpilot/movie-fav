schema {
    query: Query
    mutation: Mutation
}

type Query {
    movieFav(pageInfo: MoviePageInfoInput, filterInput: MovieFavFilterInput): MovieFavResponse
    movieSearch(pageInfo: MoviePageInfoInput, filterInput: SearchFilterInput!): MovieImdbResponse
    moviePopular(pageInfo: MoviePageInfoInput): MovieImdbResponse
}

type Mutation {
    movieCreate(movieInput: MovieInput!): MovieFavResponse
    movieModify(movieInput: MovieModifyInput!): MovieFavResponse
    movieDelete(movie_fav_info_id: ID!): MovieFavResponse
    movieImdbPopulate(pageInfo: MoviePageInfoInput): MovieImdbResponse
}

type MovieFavResponse {
    response: GeneralResponse!
    result: [MovieFavInfo]
    pageInfo: MoviePageInfo
}

type MovieImdbResponse {
    response: GeneralResponse!
    result: [MovieImdbInfo]
    pageInfo: MoviePageInfo
}

type GeneralResponse {
    code: Int!
    success: Boolean
    message: String
    version: String
}

type MoviePageInfo{
    page_info_count: Int
}

type MovieFavInfo @key(fields: "movie_fav_info_id") {
    movie_fav_info_id: ID
    movie_fav_info_imdb_info_id: ID
    movie_fav_info_user_id: ID
    movie_fav_info_imdb_id: String
    movie_fav_info_status: MovieStatusEnum
    movie_fav_info_episode_current: String
    movie_fav_info_rating_user: Float
    movie_search_info: MovieImdbInfo
}

type AccountInfo @key(fields: "account_info_id") @extends {
    account_info_id: ID @external
    account_info_to_movie_fav_info: MovieFavResponse
}

type MovieImdbInfo @key(fields: "movie_imdb_info_id") {
    movie_imdb_info_id: ID
    movie_imdb_info_imdb_id: String
    movie_imdb_info_title: String
    movie_imdb_info_cast: [MovieCastInfo]
    movie_imdb_info_year: Int
    movie_imdb_info_directors: [String]
    movie_imdb_info_genres: [String]
    movie_imdb_info_countries: [String]
    movie_imdb_info_plot: String
    movie_imdb_info_cover: String
    movie_imdb_info_episode_start: ID
    movie_imdb_info_episode_end: ID
    movie_imdb_info_rating_imdb: Float
    movie_imdb_info_type: MovieEnumType
    movie_imdb_info_user_added: Boolean
}

type MovieCastInfo {
    name: String
    image: String
}

input MovieInput {
    movie_fav_info_imdb_id: String!
    movie_fav_info_episode_current: String
    movie_fav_info_status: MovieStatusEnum
    movie_fav_info_rating_user: Float
}

input MovieModifyInput {
    movie_fav_info_id: ID!
    movie_fav_info_episode_current: String
    movie_fav_info_status: MovieStatusEnum
    movie_fav_info_rating_user: Float
}

input MoviePageInfoInput {
    first: Int
    pageNumber: Int
    minId: Int
    maxId: Int
    orderBy: OrderByEnum
    sortBy: MovieSortByEnum
}

input MovieFavFilterInput {
    movie_fav_info_imdb_id: [String]
    movie_fav_info_status: String
    movie_fav_info_type: MovieEnumType
    movie_imdb_info_title: String
    movie_imdb_info_year: Int
}

input SearchFilterInput {
    search_type: MovieSearchTypeEnum!
    search_value: String!
}

enum OrderByEnum {
    ASC
    DESC
}
enum MovieSortByEnum {
    movie_fav_info_id
    movie_fav_info_imdb_id
    movie_fav_info_status
    movie_fav_info_rating_user
    movie_imdb_info_title
}

enum MovieEnumType {
    Movie
    Series
    Anime
}

enum MovieStatusEnum {
    completed
    watching
    on_hold
    dropped
    plan_to_watch
    unmarked
}

enum MovieSearchTypeEnum {
    search_title
    search_imdb_id
}