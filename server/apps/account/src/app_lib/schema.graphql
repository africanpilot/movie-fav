schema {
    query: Query
    mutation: Mutation
}

"""
Queries for the Account Service
"""
type Query {
    accountMe: AccountResponse
    # accountImageUpload: AccountImageResponse
}

"""
Mutations for the Account Service
"""
type Mutation {
    accountCreate(accountCreateInput: AccountCreateInput!): AccountResponse
    accountModify(accountModifyInput: AccountModifyInput!): AccountResponse
    accountDelete: AccountResponse
    accountConfirmEmail: AccountResponse
    accountResendConfirm(accountLogin: String!): AccountResponse
    
    accountAuthenticationLogin(accountLoginInput: AccountLoginInput!): AccountAuthenticationResponse
    accountAuthenticationLogout: AccountAuthenticationResponse
    accountForgotPassword(accountLogin: String!): AccountAuthenticationResponse
    accountForgotPasswordConfirmEmail: AccountAuthenticationResponse
}

"""
Response Types
"""
type AccountResponse {
    response: GeneralResponse!
    result: [AccountInfo]
    pageInfo: PageInfo
}

type AccountAuthenticationResponse {
    response: GeneralResponse!
    result: AccountAuthenticationToken
    pageInfo: PageInfo
}

type AccountImageResponse {
    response: GeneralResponse!
    result: AccountImageInfo
    pageInfo: PageInfo
}

"""
Response details
"""
type GeneralResponse {
    code: Int!
    success: Boolean
    message: String
    version: String
}

type PageInfo{
    page_info_count: Int
}

type AccountInfo @key(fields: "account_info_id") {
    account_info_id: ID
    account_info_email: String
    account_info_registered_on: String
    account_info_registration_status: RegistrationEnum
    account_info_verified_email: Boolean
    account_info_last_login_date: String
    account_info_last_logout_date: String
    account_info_profile_image: String
    account_info_profile_thumbnail: String
    account_info_status: UserStatusEnum
    account_contact_first_name: String
    account_contact_last_name: String
    account_contact_middle_name: String
    account_contact_maiden_name: String
    account_contact_title: String
    account_contact_preferred_name: String
    account_contact_birthday: String
    account_contact_address_first: String
    account_contact_address_second: String
    account_contact_city: String
    account_contact_state: String
    account_contact_zip_code: String
    account_contact_address_type: AddressTypeEnum
}

type AccountAuthenticationToken {
    authenticationToken: String
    authenticationTokenType: AuthenticationTokenTypeEnum
    registrationStatus: RegistrationEnum
    accountInfo: [AccountInfo]
}

type AccountImageInfo {
    signedUrl: String
    returnUrl: String
}

"""
Account Input Types
"""
input AccountCreateInput {
    login: String!
    password: String!
    reTypePassword: String!
}

input AccountLoginInput {
    login: String!
    password: String!
}

input AccountModifyInput {
    account_info_profile_image: String
    account_info_password: String
    account_info_password_retype: String
    account_contact_first_name: String
    account_contact_last_name: String
    account_contact_middle_name: String
    account_contact_maiden_name: String
    account_contact_title: String
    account_contact_preferred_name: String
    account_contact_birthday: String
    account_contact_address_first: String
    account_contact_address_second: String
    account_contact_city: String
    account_contact_state: String
    account_contact_zip_code: String
    account_contact_address_type: AddressTypeEnum
}

input PageInfoInput {
    first: Int
    pageNumber: Int
    minId: Int
    maxId: Int
    orderBy: OrderByEnum
    sortBy: SortByEnum
}

"""
Account Enum Types
"""
enum AddressTypeEnum {
    HOME
    WORK
    SCHOOL
    OTHER
}

enum LoginFieldTypeEnum {
    USERNAME
    EMAIL
    PHONE
}

enum UserStatusEnum {
    ACTIVE
    DEACTIVATED
    DELETED
}

enum AuthenticationTokenTypeEnum {
    ACCESSTOKEN
    REFRESHTOKEN
    CSRFTOKEN
    OTHER
}

enum RegistrationEnum{
    NOTCOMPLETE
    COMPLETE
    WAITING
    APPROVED
}

enum OrderByEnum {
    ASC
    DESC
}

enum SortByEnum {
    account_info_id
}